<S>              → <program> EOF

<program>        → <function list> <program'>
                 | <instr list>

<program'>       → <instr list>
                 | ε 

<function list>  → <function> <function list'>
                 
<function list'> → <function> <function list'>
		 | ε

<function>       → 'sub' identifier <function args> '{' <instr list> '}'

<function args>  → '(' <arg list> ')'
                 | ε

<arg list>       → var <arg list'>
                 | ε

<arg list'>      → ',' var <arg list'>
                 | ε

<instr list>     → <instr> ';' <instr list'>
                 | '{' <instr list> '}'

<instr list'>    → <instr> ';' <instr list'>
                 | ε

<funcall>        → '&' identifier <funcall args>
                 | identifier <funcall args>

<funcall args>   → '(' <args call list> ')'

<args call list> → <instr> <args call list'>
                 | ε

<args call list'>→ ',' <instr> <args call list'>
                 | ε

<instr>          → <cond>
                 | <expr> <instr'> 
                 | 'return' <expr>

<instr'>         → '=' <expr>
                 | 'if' <expr>
                 | 'unless' <expr>
                 | ε

<cond>           → 'if' <expr> '{' <instr list> '}' <cond end>
                 | 'unless' <expr> '{' <instr list> '}' <cond end>

<cond end>       → 'else' <expr> '{' <instr list> '}' <cond end>
                 | 'elsif' <expr> '{' <instr list> '}' <cond end>
                 | ε

<simple expr>    → <funcall>
                 | var
                 | integer
                 | string

<expr>           → 'not' <expr>
                 | <expr-or>

<expr-or>        → <expr-and> <expr-or'>

<expr-or'>       → '||' <expr-and> <expr-or'>
                 | ε

<expr-and>       → <expr-eq> <expr-and'>

<expr-and'>      → '&&' <expr-eq> <expr-and'>
                 | ε

<expr-eq>        → <comp> <expr-eq'>

<expr-eq'>       → '==' <expr-eq'>
                 | '!=' <expr-eq'>
                 | 'eq' <expr-eq'>
                 | 'ne' <expr-eq'>
                 |  ε

<comp>           → <calc> <comp'>

<comp'>          → '>' <calc> <comp'>
                 | '<' <calc> <comp'>
                 | '>=' <calc> <comp'>
                 | '<=' <calc> <comp'>
                 | 'lt' <calc> <comp'>
                 | 'gt' <calc> <comp'>
                 | 'le' <calc> <comp'>
                 | 'ge' <calc> <comp'>
                 | ε

<calc>           → <term> <calc'>

<calc'>          → '+' <term> <calc'>
                 | '-' <term> <calc'>
                 | '.' <term> <calc'>
                 | ε
                 
<term>           → <factor> <term'>

<term'>          → '*' <factor> <term'>
                 | '/' <factor> <term'>
                 | ε

<factor>         → <simple expr>
                 | '!' <factor>
                 | '+' <factor>
                 | '-' <factor>
                 | '(' <expr> ')'
