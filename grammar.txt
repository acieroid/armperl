<program>        →  <function list> <instr list>
                 |  <function list>
                 |  <instr list>

<function list>  → <function list> <function>
                 | <function>

<function>       → 'sub' identifier <function args>
                   '{' <instr list> '}'

<function args>  → '(' <arg list> ')'
                 | ε

<arg list>       → <arg list> ',' var
                 | var
                 | ε

<instr list>     → <instr list> <instr> ';'
                 | '{' <instr list> '}'
                 | <instr> ';'

<funcall>        → '&' identifier <funcall args> 
                 | identifier <funcall args> 

<funcall args>   → '(' <args call list> ')'

<args call list> → <args call list> ',' <instr>
                 | <instr>
                 | ε

<instr>          → <cond>
                 | <expr>
                 | <expr> '=' <expr>
                 | <expr> 'if' <expr>
                 | <expr> 'unless' <expr>
                 | 'return' <expr>

<cond>           → 'if' <expr> '{' <instr list> '}' <cond end>
                 | 'unless' <expr> '{' <instr list> '}' <cond end>

<cond end>       → 'else' '{' <instr list> '}'
                 | 'elsif' <expr> '{' <instr list> '}' <cond end>
                 | ε

<simple expr>    → <funcall>
                 | var
                 | integer
                 | string

<expr>           → 'not' <expr>
                 | <expr-or>

<expr-or>        → <expr-or> '||' <expr-and>
                 | <expr-and>

<expr-and>       → <expr-and> '&&' <expr-eq>
                 | <expr-eq>

<expr-eq>        → <comp> '==' <comp>
                 | <comp> '!=' <comp>
                 | <comp> 'eq' <comp>
                 | <comp> 'ne' <comp>
                 | <comp>

<comp>           → <calc> '>' <calc>
                 | <calc> '<' <calc>
                 | <calc> '>=' <calc>
                 | <calc> '<=' <calc>
                 | <calc> 'lt' <calc>
                 | <calc> 'gt' <calc>
                 | <calc> 'le' <calc>
                 | <calc> 'ge' <calc>
                 | <calc>

<calc>           → <calc> '+' <term>
                 | <calc> '-' <term>
                 | <calc> '.' <term>
                 | <term>
                 

<term>           → <term> '*' <factor>
                 | <term> '/' <factor>
                 | <factor>

<factor>         → <simple expr>
                 | '!' <factor>
                 | '+' <factor>
                 | '-' <factor>
                 | '(' <expr> ')'
