(** All the possibles tokens *)
type token =
  | VAR of string          (* $var   *)
  | INTEGER of int         (* 123    *)
  | STRING of string       (* "foo"  *)
  | IDENTIFIER of string   (* foo    *)
  | SUB                    (* sub    *)
  | RETURN                 (* return *)
  | CALL_MARK              (* &      *)
  | LBRACE                 (* {      *)
  | RBRACE                 (* }      *)
  | LPAR                   (* (      *)
  | RPAR                   (* )      *)
  | SEMICOLON              (* ;      *)
  | COMMA                  (* ,      *)
  | IF                     (* if     *)
  | UNLESS                 (* unless *)
  | ELSE                   (* else   *)
  | ELSEIF                 (* elsif  *)
  | NOT                    (* !      *)
  | NOT_WORD               (* not    *)
  | PLUS                   (* +      *)
  | MINUS                  (* -      *)
  | TIMES                  (* *      *)
  | DIVIDE                 (* /      *)
  | ASSIGN                 (* =      *)
  | CONCAT                 (* .      *)
  | LAZY_OR                (* ||     *)
  | LAZY_AND               (* &&     *)
  | EQUALS                 (* ==     *)
  | DIFFERENT              (* !=     *)
  | GREATER                (* >      *)
  | LOWER                  (* <      *)
  | GREATER_EQUALS         (* >=     *)
  | LOWER_EQUALS           (* <=     *)
  | STRING_EQUALS          (* eq     *)
  | STRING_DIFFERENT       (* ne     *)
  | STRING_GREATER         (* gt     *)
  | STRING_LOWER           (* lt     *)
  | STRING_GREATER_EQUALS  (* ge     *)
  | STRING_LOWER_EQUALS    (* le     *)
  | EOF                    (* EOF    *)

(** Return a string describing the given token *)
val string_of_token : token -> string
